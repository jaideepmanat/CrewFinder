rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Allow reading other users' basic info for chat purposes
      allow read: if request.auth != null;
      // Allow admin access (for admin panel - in production you'd want better admin authentication)
      allow read, write, delete: if true; // Temporary for admin functionality
    }
    
    // Posts can be read by authenticated users, written by owner
    match /posts/{postId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == resource.data.authorId;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.authorId;
      // Allow admin access for management
      allow read, write, delete: if true; // Temporary for admin functionality
    }
    
    // Games collection - readable by all authenticated users, writable for submissions
    match /games/{gameId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if true; // Allow admin operations
    }
    
    // Chat rooms can be read/written by participants only
    match /chats/{chatId} {
      allow read, write: if request.auth != null && request.auth.uid in resource.data.participants;
      allow create: if request.auth != null && request.auth.uid in request.resource.data.participants;
      // Allow admin access for management
      allow read, delete: if true; // Temporary for admin functionality
    }
    
    // Messages can be read by chat participants, created by authenticated users
    match /messages/{messageId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.senderId;
      // Allow admin access for management
      allow read, delete: if true; // Temporary for admin functionality
    }
  }
}
